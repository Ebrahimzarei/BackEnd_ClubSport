// <auto-generated />
using System;
using DataLayer.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ClubSportContext))]
    [Migration("20220221092459_InitialTwo")]
    partial class InitialTwo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClubSport.Domain.EventSport.EventSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("EventResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldSportRef")
                        .HasColumnType("int");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HallSportRef")
                        .HasColumnType("int");

                    b.Property<string>("NameEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramSportRef")
                        .HasColumnType("int");

                    b.Property<string>("RefeRee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FieldSportRef")
                        .IsUnique();

                    b.HasIndex("HallSportRef")
                        .IsUnique();

                    b.HasIndex("ProgramSportRef")
                        .IsUnique()
                        .HasFilter("[ProgramSportRef] IS NOT NULL");

                    b.ToTable("Table_EventSports");
                });

            modelBuilder.Entity("ClubSport.Domain.FieldSport.FieldSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeSportField")
                        .HasColumnType("int");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<string>("NameField")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Table_FieldSports");
                });

            modelBuilder.Entity("ClubSport.Domain.HallSport.HallSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MemberSportRef")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberSportRef")
                        .IsUnique();

                    b.ToTable("Table_HallSports");
                });

            modelBuilder.Entity("ClubSport.Domain.Member.Member", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Memberid")
                        .HasColumnType("int");

                    b.Property<string>("Natinalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Table_Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FatherName = "Reaz",
                            FullName = "EbrahimZarei",
                            Memberid = 1,
                            Natinalcode = "2289567482",
                            Password = "1234567890",
                            Role = "Admin",
                            UserName = "Ebrahim"
                        });
                });

            modelBuilder.Entity("ClubSport.Domain.MemberSport.MemberSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HallSportRef")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Ncode")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Table_MemberSports");
                });

            modelBuilder.Entity("ClubSport.Domain.ProgramSport.ProgramSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbsenceCost")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysOfYear")
                        .HasColumnType("int");

                    b.Property<string>("DetailsSport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventSportRef")
                        .HasColumnType("int");

                    b.Property<int>("FieldSportRef")
                        .HasColumnType("int");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HallSportRef")
                        .HasColumnType("int");

                    b.Property<string>("NameProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PMemberSportRef")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramSportId")
                        .HasColumnType("int");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FieldSportRef")
                        .IsUnique();

                    b.HasIndex("HallSportRef")
                        .IsUnique();

                    b.HasIndex("PMemberSportRef")
                        .IsUnique();

                    b.ToTable("Table_ProgramSports");
                });

            modelBuilder.Entity("ClubSport.Domain.ServicesSport.ServicesSport", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoachSport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HallSportRef")
                        .HasColumnType("int");

                    b.Property<string>("NameService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallSportRef")
                        .IsUnique();

                    b.ToTable("Table_ServicesSports");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Table_Users");
                });

            modelBuilder.Entity("ClubSport.Domain.EventSport.EventSport", b =>
                {
                    b.HasOne("ClubSport.Domain.FieldSport.FieldSport", "F_Sport")
                        .WithOne("E_Sport")
                        .HasForeignKey("ClubSport.Domain.EventSport.EventSport", "FieldSportRef")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClubSport.Domain.HallSport.HallSport", "H_Sport")
                        .WithOne("E_Sport")
                        .HasForeignKey("ClubSport.Domain.EventSport.EventSport", "HallSportRef")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClubSport.Domain.ProgramSport.ProgramSport", "P_Sport")
                        .WithOne("E_Sport")
                        .HasForeignKey("ClubSport.Domain.EventSport.EventSport", "ProgramSportRef")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ClubSport.Domain.HallSport.HallSport", b =>
                {
                    b.HasOne("ClubSport.Domain.MemberSport.MemberSport", "M_Sport")
                        .WithOne("H_Sport")
                        .HasForeignKey("ClubSport.Domain.HallSport.HallSport", "MemberSportRef")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ClubSport.Domain.ProgramSport.ProgramSport", b =>
                {
                    b.HasOne("ClubSport.Domain.FieldSport.FieldSport", "F_Sport")
                        .WithOne("P_Sport")
                        .HasForeignKey("ClubSport.Domain.ProgramSport.ProgramSport", "FieldSportRef")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClubSport.Domain.HallSport.HallSport", "H_Sport")
                        .WithOne("P_Sport")
                        .HasForeignKey("ClubSport.Domain.ProgramSport.ProgramSport", "HallSportRef")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClubSport.Domain.MemberSport.MemberSport", "M_Sport")
                        .WithOne("P_Sport")
                        .HasForeignKey("ClubSport.Domain.ProgramSport.ProgramSport", "PMemberSportRef")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ClubSport.Domain.ServicesSport.ServicesSport", b =>
                {
                    b.HasOne("ClubSport.Domain.HallSport.HallSport", "H_sport")
                        .WithOne("S_Sport")
                        .HasForeignKey("ClubSport.Domain.ServicesSport.ServicesSport", "HallSportRef")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
